{"version":3,"file":"md.js","sourceRoot":"","sources":["../../src/utils/md.ts"],"names":[],"mappings":"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","sourcesContent":["import { CalloutIcon } from '../types';\nimport asciitable from 'asciitable.js';\nimport opengraph from './opengraph';\n\nexport const inlineCode = (text: string) => {\n  return `\\`${text}\\``;\n};\n\nexport const bold = (text: string) => {\n  return `**${text}**`;\n};\n\nexport const italic = (text: string) => {\n  return `_${text}_`;\n};\n\nexport const strikethrough = (text: string) => {\n  return `~~${text}~~`;\n};\n\nexport const underline = (text: string) => {\n  return `<u>${text}</u>`;\n};\n\nexport const link = (text: string, href: string) => {\n  return `[${text}](${href})`;\n};\n\nexport const codeBlock = (text: string, language?: string) => {\n  return `\\`\\`\\`${language}\n${text}\n\\`\\`\\``;\n};\n\nexport const heading1 = (text: string) => {\n  return `# ${text}`;\n};\n\nexport const heading2 = (text: string) => {\n  return `## ${text}`;\n};\n\nexport const heading3 = (text: string) => {\n  return `### ${text}`;\n};\n\nexport const quote = (text: string) => {\n  // the replace is done to handle multiple lines\n  return `> ${text.replace(/\\n/g, \"  \\n>\")}`;\n};\n\nexport const callout = (text: string, icon?: CalloutIcon) => {\n  let emoji: string | undefined;\n  if (icon?.type === 'emoji') {\n    emoji = icon.emoji;\n  }\n\n  // the replace is done to handle multiple lines\n  return `> ${emoji ? emoji + ' ' : ''}${text.replace(/\\n/g, \"  \\n>\")}`;\n};\n\nexport const bullet = (text: string) => {\n  return `- ${text}`;\n};\n\nexport const todo = (text: string, checked: boolean) => {\n  return checked ? `- [x] ${text}` : `- [ ] ${text}`;\n};\n\nexport const image = (alt: string, href: string) => {\n  if (/^https?:\\/\\//.test(alt)) {\n    // if alt is an external url, turn it into a \"image link\"\n    return link(`![image link](${href})`, alt);\n  }\n  return `![${alt}](${href})`;\n};\n\nexport const addTabSpace = (text: string, n = 0) => {\n  const tab = \"\t\";\n  for (let i = 0; i < n; i++) {\n    if (text.includes(\"\\n\")) {\n      const multiLineText = text.split(/(?<=\\n)/).join(tab);\n      text = tab + multiLineText;\n    } else text = tab + text;\n  }\n  return text;\n};\n\nexport const divider = () => {\n  return \"---\";\n};\n\nexport const table = (cells: string[][]) => {\n  const matrix = [cells[0], null, ...cells.slice(1)];\n  return asciitable(matrix);\n};\n\n\nexport const preview = async (url: string) => {\n  const data = await opengraph(url);\n  const og = data.result;\n\n  if (og) {\n    const icon = og.ogImage?.url ? `![favicon](${og.favicon}) ` : '';\n    const preview = og.ogImage?.url ? `![image](${og.ogImage.url}) ` : '';\n    const title = og.ogSiteName || og.ogTitle;\n    const description = og.ogDescription || '';\n  \n    const lines = [\n      `[${icon}**${title}**](${url})`,\n      description.replace(/\\n/g, \"  \"),\n      url\n    ];\n\n    return lines.filter(Boolean).map(line => `> ${line}`).join('  \\n');\n  }\n  else {\n    return `> [${url}](${url})`;\n  }\n}\n\nexport const bookmark = async (url: string) => {\n  const data = await opengraph(url);\n  const og = data.result;\n\n  if (og) {\n    const icon = og.ogImage?.url ? `![favicon](${og.favicon}) ` : '';\n    const preview = og.ogImage?.url ? `![image](${og.ogImage.url}) ` : '';\n    const title = og.ogTitle;\n    const description = og.ogDescription || '';\n  \n    const lines = [\n      `[${preview}**${title}**](${url})`,\n      description.replace(/\\n/g, \"  \"),\n      url\n    ];\n\n    return lines.filter(Boolean).map(line => `> ${line}`).join('  \\n');\n  }\n  else {\n    return `> [${url}](${url})`;\n  }\n}"]}