{"version":3,"file":"asciitable.cjs.js","sources":["../src/asciitable.js"],"sourcesContent":["/**\n * Create a ASCII table based on a bi-dimensional array of strings\n * @param  {Array}   m                                   bi-dimensional array of strings\n * @param  {Object}  [options]                           Options object\n * @param  {Object}  [options.row]                       Row options\n * @param  {String}  [options.row.paddingLeft=\"|\"]       String added before the first column\n * @param  {String}  [options.row.paddingRight=\"|\"]      String added after the last column\n * @param  {String}  [options.row.colSeparator=\"|\"]      String added between columns\n * @param  {String}  [options.row.lineBreak=\"\\n\"]        String used to break rows\n * @param  {Object}  [options.cell]                      Cell options\n * @param  {String}  [options.cell.paddingLeft=\" \"]      String added before the cell content\n * @param  {String}  [options.cell.paddingRight=\" \"]     String added after the cell content\n * @param  {Number}  [options.cell.defaultAlignDir=\"-1\"]  Define the default alignment when not specified (-1=left, 0=center, 1=right)\n * @param  {Object}  [options.hr]                        Horizontal Line options\n * @param  {String}  [options.hr.str=\"-\"]                String that will be repeated to make the Horizontal Line\n * @param  {String}  [options.hr.colSeparator=\"|\"]       String added between columns\n * @return {string}                                      The final ASCII table\n * @author github.com/victornpb\n * @date   2016-12-28\n */\nexport default function matrixToAsciiTable(m, options) {\n  options = defaultArgs({\n    row: {\n      paddingLeft: '|', // before first column\n      paddingRight: '|', // after last column\n      colSeparator: '|', // between each column\n      lineBreak: '\\n'\n    },\n    cell: {\n      paddingLeft: ' ',\n      paddingRight: ' ',\n      defaultAlignDir: -1 // left=-1 center=0 right=1\n    },\n    hr: {\n      str: '-',\n      colSeparator: '|'\n    }\n  }, options);\n\n  function repeatStr(width, str = ' ') {\n    const result = (width > 0) ? Array(Math.ceil(width / str.length) + 1).join(str) : '';\n    return result.length > width ? result.substr(0, width) : result;\n  }\n\n  function alignText(txt, width) {\n    function pad(txt, width, dir) {\n      const p = width - txt.length;\n      const pL = (dir > 0) ? p : (p / 2) << 0;\n      const pR = (dir < 0) ? p : pL + (p - (pL * 2));\n      return p > 0 ? (dir >= 0 ? Array(pL + 1).join(' ') : '') + txt + (dir <= 0 ? Array(pR + 1).join(' ') : '') : txt;\n    }\n    txt = `${txt}`; // toString\n    switch (txt.charAt(0)) {\n    case '<':\n      return pad(txt.substr(1), width, -1); // align left\n    case '^':\n      return pad(txt.substr(1), width, 0); // align center\n    case '>':\n      return pad(txt.substr(1), width, 1); // align right\n    default:\n      return pad(txt, width, options.cell.defaultAlignDir);\n    }\n  }\n\n  function calcColumnsWidth(matrix) {\n    // calculate columns width\n    const colsWidth = [];\n    for (let r = 0, rLen = matrix.length; r < rLen; r++) {\n      if (!matrix[r]) continue; // separator\n      for (let c = 0, cLen = matrix[r].length; c < cLen; c++) {\n        if (!colsWidth[c]) colsWidth[c] = 0;\n        colsWidth[c] = Math.max(colsWidth[c], (`${matrix[r][c]}`).length);\n      }\n    }\n    return colsWidth;\n  }\n\n  const paddingLength = options.cell.paddingLeft.length + options.cell.paddingRight.length;\n  const hrSeparator = repeatStr(options.row.colSeparator.length, options.hr.colSeparator || options.hr.str);\n  const colsWidth = calcColumnsWidth(m);\n\n  // create table\n  const table = [];\n  for (let r = 0, rLen = m.length; r < rLen; r++) {\n    const cols = [];\n\n    if (m[r]) { // create columns\n      for (let c = 0; c < colsWidth.length; c++) {\n        cols.push(options.cell.paddingLeft + alignText(m[r][c], colsWidth[c]) + options.cell.paddingRight);\n      }\n      table.push([options.row.paddingLeft, cols.join(options.row.colSeparator), options.row.paddingRight].join(''));\n    }\n    else { // create horizontal line\n      for (let c = 0; c < colsWidth.length; c++) {\n        cols.push(repeatStr(colsWidth[c] + paddingLength, options.hr.str));\n      }\n      table.push([options.row.paddingLeft, cols.join(hrSeparator), options.row.paddingRight].join(''));\n    }\n  }\n  return table.join(options.row.lineBreak);\n}\n\nfunction defaultArgs(defaults, options) {\n  function isObj(x) { return x !== null && typeof x === 'object'; }\n  function hasOwn(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n\n  if (isObj(options)) for (let prop in defaults) {\n    if (hasOwn(defaults, prop) && hasOwn(options, prop) && options[prop] !== undefined) {\n      if (isObj(defaults[prop])) defaultArgs(defaults[prop], options[prop]);\n      else defaults[prop] = options[prop];\n    }\n  }\n  return defaults;\n}\n"],"names":["matrixToAsciiTable","m","options","defaultArgs","row","paddingLeft","paddingRight","colSeparator","lineBreak","cell","defaultAlignDir","hr","str","repeatStr","width","result","Array","Math","ceil","length","join","substr","alignText","txt","pad","dir","p","pL","pR","charAt","calcColumnsWidth","matrix","colsWidth","r","rLen","c","cLen","max","paddingLength","hrSeparator","table","cols","push","defaults","isObj","x","hasOwn","obj","prop","Object","prototype","hasOwnProperty","call","undefined"],"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"}